{% macro input(id, name, value, type, size, class, min, max, step) %}
    <input type="{{ type|default('text') }}" id="{{ id }}" name="{{ name }}" class="{{ class }}" value="{{ value }}" size="{{ size|default(20) }}"{% if type === 'number' %} min="{{ min }}" max="{{ max }}" step="{{ step|default(1) }}"{% else %} minlength="{{ min }}" maxlength="{{ max }}"{% endif %} />
{% endmacro %}

{% macro pickem(id, name, value, checked, type, class) %}
	<input type="{{ type|default('radio') }}" id="{{ id }}" class="{{ class }}" name="{{ name }}" value="{{ value }}"{{ checked ? ' checked="checked"' : '' }} />
{% endmacro %}

{% macro options(field_name, type, option, index, checked) %}
    {{ include('fields/options.twig') }}
{% endmacro %}

{% macro choice(type, data) %}
    {% import _self as forms %}

	{% if type !== 'select' %}
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-per_col' }}">{{ lang('ITEMS_PER_COLUMN') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-per_col', 'field_props[' ~ data.FIELD_NAME ~ '][per_col]', data.FIELD_PROPS.per_col, 'number', 3) }}
			{{ forms.input(data.FIELD_NAME ~ '-multi_select', 'field_props[' ~ data.FIELD_NAME ~ '][multi_select]', data.FIELD_PROPS.multi_select, 'hidden') }}
		</dd>
	</dl>
	{% endif %}
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-options' }}">{{ lang('OPTIONS') ~ lang('COLON') }}</label></dt>
		<dd>
			{% if type === 'select' %}
				{% set type = data.FIELD_PROPS.multi_select ? 'checkbox' : 'radio' %}
				{{ forms.pickem('multi_select_' ~ data.FIELD_NAME, 'field_props[' ~ data.FIELD_NAME ~ '][multi_select]', 1, data.FIELD_PROPS.multi_select, 'checkbox', 'toggle-multi') }} {{ lang('MULTI_SELECT') }}<br />
				{{ forms.input(data.FIELD_NAME ~ '-per_col', 'field_props[' ~ data.FIELD_NAME ~ '][per_col]', data.FIELD_PROPS.per_col, 'hidden') }}
			{% endif %}
			<div id="{{ data.FIELD_NAME }}-options-container" class="field-options-list">
			{% for option in data.FIELD_PROPS.options %}
				{{ forms.options(data.FIELD_NAME, type, option, loop.index, (option in data.FIELD_PROPS.defaults)) }}
			{% endfor %}
			</div>
			<a href="#" class="add-option option-radio ui-corner-all ui-state-default" id="add-option-{{ data.FIELD_NAME }}" data-type="{{ (type == 'checkbox' or data.FIELD_PROPS.multi_select) ? 'checkbox' : 'radio' }}">{{ lang('ADD_OPTION') }}</a>
		</dd>
	</dl>
{% endmacro %}

{% macro checkbox(data) %}
    {% import _self as forms %}
	{{ forms.choice('checkbox', data) }}
{% endmacro %}

{% macro color(data) %}
    {% import _self as forms %}

	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-num_colors' }}">{{ lang('COLOR_NUM_COLORS') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-num_colors', 'field_props[' ~ data.FIELD_NAME ~ '][num_colors]', data.FIELD_PROPS.num_colors, 'number', 3, '', 1) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-palette' }}">{{ lang('COLOR_PALETTE') ~ lang('COLON') }}</label><br />{{ lang('COLOR_PALETTE_EXPLAIN') }}</dt>
		<dd>
			<textarea id="{{ data.FIELD_NAME ~ '-palette' }}" name="{{ 'field_props[' ~ data.FIELD_NAME ~ '][palette]' }}" rows="4">{{ data.FIELD_PROPS.palette }}</textarea><br />
			{{ forms.pickem(data.FIELD_NAME ~ '-palette_only', 'field_props[' ~ data.FIELD_NAME ~ '][palette_only]', 1, data.FIELD_PROPS.palette_only, 'checkbox') }} {{ lang('COLOR_PALETTE_ONLY') }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-color' }}">{{ lang('COLOR_DISPLAY_AS') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.pickem(data.FIELD_NAME ~ '-color', 'field_props[' ~ data.FIELD_NAME ~ '][display]', 'box', data.FIELD_PROPS.display === 'box', 'radio') }} {{ lang('COLOR_BOX') }}<br />
			{{ forms.pickem(data.FIELD_NAME ~ '-hex', 'field_props[' ~ data.FIELD_NAME ~ '][display]', 'hex', data.FIELD_PROPS.display === 'hex', 'radio') }} {{ lang('COLOR_HEX') }}
		</dd>
	</dl>
{% endmacro %}

{% macro datetime(data) %}
	{% import _self as forms %}

	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-type' }}">{{ lang('DATETIME_TYPE') ~ lang('COLON') }}</label></dt>
		<dd>
			<select id="{{ data.FIELD_NAME ~ '-type' }}" name="field_props[{{ data.FIELD_NAME }}][type]">
				<option value="date"{% if data.FIELD_PROPS.type === 'date' %} selected="selected"{% endif %}>{{ lang('DATETIME_DATE') }}</option>
				<option value="datetime"{% if data.FIELD_PROPS.type === 'datetime' %} selected="selected"{% endif %}>{{ lang('DATETIME_FULL') }}</option>
				<option value="timeonly"{% if data.FIELD_PROPS.type === 'timeonly' %} selected="selected"{% endif %}>{{ lang('DATETIME_TIMEONLY') }}</option>
				<option value="months"{% if data.FIELD_PROPS.type === 'months' %} selected="selected"{% endif %}>{{ lang('DATETIME_MONTHS') }}</option>
				<option value="years"{% if data.FIELD_PROPS.type === 'years' %} selected="selected"{% endif %}>{{ lang('DATETIME_YEARS') }}</option>
			</select>
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-num_dates' }}">{{ lang('DATETIME_NUM_DATES') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-num_dates', 'field_props[' ~ data.FIELD_NAME ~ '][num_dates]', data.FIELD_PROPS.num_dates, 'number', 3, '', 1) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-range' }}">{{ lang('DATETIME_RANGE') ~ lang('COLON') }}</label></dt>
		<dd>
			<label>{{ forms.pickem(data.FIELD_NAME ~ '-range', 'field_props[' ~ data.FIELD_NAME ~ '][range]', 1, data.FIELD_PROPS.range, 'radio') }} {{ lang('YES') }}</label>
			<label>{{ forms.pickem(data.FIELD_NAME ~ '-range', 'field_props[' ~ data.FIELD_NAME ~ '][range]', 0, !data.FIELD_PROPS.range, 'radio') }} {{ lang('NO') }}</label>
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-min_date' }}">{{ lang('DATETIME_MIN_DATE') ~ lang('COLON') }}</label><br />{{ lang('DATETIME_MIN_EXPLAIN') }}</dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-min_date', 'field_props[' ~ data.FIELD_NAME ~ '][min_date]', data.FIELD_PROPS.min_date, 'text', 25) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-max_date' }}">{{ lang('DATETIME_MAX_DATE') ~ lang('COLON') }}</label><br />{{ lang('DATETIME_MAX_EXPLAIN') }}</dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-max_date', 'field_props[' ~ data.FIELD_NAME ~ '][max_date]', data.FIELD_PROPS.max_date, 'text', 25) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-dformat' }}">{{ lang('DATETIME_DISPLAY_FORMAT') ~ lang('COLON') }}</label><br />{{ lang('DATETIME_FORMAT_EXPLAIN') }}</dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-dformat', 'field_props[' ~ data.FIELD_NAME ~ '][dformat]', data.FIELD_PROPS.dformat, 'text', 20) }}
		</dd>
	</dl>
{% endmacro %}

{% macro number(data) %}
    {% import _self as forms %}

	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-min' }}">{{ lang('NUMBER_MIN_VALUE') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-min', 'field_props[' ~ data.FIELD_NAME ~ '][min]', data.FIELD_PROPS.min, 'number', 5) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-max' }}">{{ lang('NUMBER_MAX_VALUE') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-max', 'field_props[' ~ data.FIELD_NAME ~ '][max]', data.FIELD_PROPS.max, 'number', 5) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-step' }}">{{ lang('NUMBER_STEP') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-step', 'field_props[' ~ data.FIELD_NAME ~ '][step]', data.FIELD_PROPS.step, 'number', 5) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-size' }}">{{ lang('INPUT_SIZE') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-size', 'field_props[' ~ data.FIELD_NAME ~ '][size]', data.FIELD_PROPS.size, 'number', 5, '', 10, 100, 5) }}%
		</dd>
	</dl>
{% endmacro %}

{% macro radio(data) %}
    {% import _self as forms %}
	{{ forms.choice('radio', data) }}
{% endmacro %}

{% macro range(data) %}
    {% import _self as forms %}

	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-type-0' }}">{{ lang('RANGE_TYPE') ~ lang('COLON') }}</label></dt>
		<dd>
			<label>{{ forms.pickem(data.FIELD_NAME ~ '-type-0', 'field_props[' ~ data.FIELD_NAME ~ '][type]', 'single', (data.FIELD_PROPS.type === 'single'), 'radio') }} {{ lang('RANGE_TYPE_SINGLE') }}</label>
			<label>{{ forms.pickem(data.FIELD_NAME ~ '-type-1', 'field_props[' ~ data.FIELD_NAME ~ '][type]', 'double', (data.FIELD_PROPS.type === 'double'), 'radio') }} {{ lang('RANGE_TYPE_DOUBLE') }}</label>
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-theme' }}">{{ lang('RANGE_THEME') ~ lang('COLON') }}</label></dt>
		<dd>
			<select id="{{ data.FIELD_NAME ~ '-theme' }}" name="field_props[{{ data.FIELD_NAME }}][theme]">
				<option value="skinFlat"{% if data.FIELD_PROPS.theme === 'skinFlat' %} selected="selected"{% endif %}>skinFlat</option>
				<option value="skinHTML5"{% if data.FIELD_PROPS.theme === 'skinHTML5' %} selected="selected"{% endif %}>skinHTML5</option>
				<option value="skinModern"{% if data.FIELD_PROPS.theme === 'skinModern' %} selected="selected"{% endif %}>skinModern</option>
				<option value="skinNice"{% if data.FIELD_PROPS.theme === 'skinNice' %} selected="selected"{% endif %}>skinNice</option>
				<option value="skinSimple"{% if data.FIELD_PROPS.theme === 'skinSimple' %} selected="selected"{% endif %}>skinSimple</option>
			</select>
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-size' }}">{{ lang('INPUT_SIZE') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-size', 'field_props[' ~ data.FIELD_NAME ~ '][size]', data.FIELD_PROPS.size, 'number', 5, '', 10, 100, 5) }}%
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-values' }}">{{ lang('RANGE_VALUES') ~ lang('COLON') }}</label><br />{{ lang('RANGE_VALUES_EXPLAIN') }}</dt>
		<dd>
			<textarea id="{{ data.FIELD_NAME ~ '-values' }}" name="{{ 'field_props[' ~ data.FIELD_NAME ~ '][values]' }}" rows="4">{{ data.FIELD_PROPS.values }}</textarea><br />
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-prefix' }}">{{ lang('RANGE_PREFIX') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-prefix', 'field_props[' ~ data.FIELD_NAME ~ '][prefix]', data.FIELD_PROPS.prefix, 'text', 15) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-postfix' }}">{{ lang('RANGE_POSTFIX') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-postfix', 'field_props[' ~ data.FIELD_NAME ~ '][postfix]', data.FIELD_PROPS.postfix, 'text', 15) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-min' }}">{{ lang('RANGE_MIN_VALUE') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-min', 'field_props[' ~ data.FIELD_NAME ~ '][min]', data.FIELD_PROPS.min, 'number', 5) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-max' }}">{{ lang('RANGE_MAX_VALUE') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-max', 'field_props[' ~ data.FIELD_NAME ~ '][max]', data.FIELD_PROPS.max, 'number', 5) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-step' }}">{{ lang('RANGE_STEP') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-step', 'field_props[' ~ data.FIELD_NAME ~ '][step]', data.FIELD_PROPS.step, 'number', 5) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-grid-0' }}">{{ lang('RANGE_ENABLE_GRID') ~ lang('COLON') }}</label></dt>
		<dd>
			<label>{{ forms.pickem(data.FIELD_NAME ~ '-grid-0', 'field_props[' ~ data.FIELD_NAME ~ '][grid]', 1, (data.FIELD_PROPS.grid !== 0), 'radio') }} {{ lang('YES') }}</label>
			<label>{{ forms.pickem(data.FIELD_NAME ~ '-grid-1', 'field_props[' ~ data.FIELD_NAME ~ '][grid]', 0, (data.FIELD_PROPS.grid == 0), 'radio') }} {{ lang('NO') }}</label>
		</dd>
	</dl>
{% endmacro %}

{% macro select(data) %}
    {% import _self as forms %}
	{{ forms.choice('select', data) }}
{% endmacro %}

{% macro text(data) %}
    {% import _self as forms %}

	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-maxlength' }}">{{ lang('TEXTAREA_MAXLENGTH') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-maxlength', 'field_props[' ~ data.FIELD_NAME ~ '][maxlength]', data.FIELD_PROPS.maxlength, 'number', 5) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-size' }}">{{ lang('INPUT_SIZE') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-size', 'field_props[' ~ data.FIELD_NAME ~ '][size]', data.FIELD_PROPS.size, 'number', 5, '', 10, 100, 5) }}%
		</dd>
	</dl>
{% endmacro %}

{% macro textarea(data) %}
    {% import _self as forms %}

	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-editor-0' }}">{{ lang('TEXTAREA_ENABLE_EDITOR') ~ lang('COLON') }}</label></dt>
		<dd>
			<label>{{ forms.pickem(data.FIELD_NAME ~ '-editor-0', 'field_props[' ~ data.FIELD_NAME ~ '][editor]', 1, (data.FIELD_PROPS.editor !== 0), 'radio') }} {{ lang('YES') }}</label>
			<label>{{ forms.pickem(data.FIELD_NAME ~ '-editor-1', 'field_props[' ~ data.FIELD_NAME ~ '][editor]', 0, (data.FIELD_PROPS.editor == 0), 'radio') }} {{ lang('NO') }}</label>
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-size-small' }}">{{ lang('TEXTAREA_SIZE') ~ lang('COLON') }}</label></dt>
		<dd>
			<label>{{ forms.pickem(data.FIELD_NAME ~ '-size-small', 'field_props[' ~ data.FIELD_NAME ~ '][size]', 'small', (data.FIELD_PROPS.size === 'small'), 'radio') }} {{ lang('TEXTAREA_SMALL') }}</label>
			<label>{{ forms.pickem(data.FIELD_NAME ~ '-size-large', 'field_props[' ~ data.FIELD_NAME ~ '][size]', 'large', (data.FIELD_PROPS.size === 'large'), 'radio') }} {{ lang('TEXTAREA_LARGE') }}</label>
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-maxlength' }}">{{ lang('TEXTAREA_MAXLENGTH') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-maxlength', 'field_props[' ~ data.FIELD_NAME ~ '][maxlength]', data.FIELD_PROPS.maxlength, 'number', 5) }}
		</dd>
	</dl>
	<dl>
		<dt><label for="{{ data.FIELD_NAME ~ '-max_chars' }}">{{ lang('INDEX_MAX_CHARS') ~ lang('COLON') }}</label></dt>
		<dd>
			{{ forms.input(data.FIELD_NAME ~ '-max_chars', 'field_props[' ~ data.FIELD_NAME ~ '][max_chars]', data.FIELD_PROPS.max_chars, 'number', 5) }}
		</dd>
	</dl>
{% endmacro %}

<!-- EVENT form_field_settings -->
